<ResourceDictionary
 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:nav="clr-namespace:Mmu.Mlh.WpfCoreExtensions.Areas.Initialization.SubAreas.Navigation.Models"
 xmlns:vm="clr-namespace:Mmu.Mlh.WpfCoreExtensions.Areas.MvvmShell.Container"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
 xmlns:viewExtensions="clr-namespace:Mmu.Mlh.WpfCoreExtensions.Areas.ViewExtensions"
 xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
 xmlns:converters="clr-namespace:Mmu.Mlh.WpfCoreExtensions.Areas.MvvmShell.Appearance.Converters">

 <converters:DarkThemeToBooleanConverter x:Key="DarkToBoolConverter" />
 <converters:LightThemeToBooleanConverter x:Key="LightToBoolConverter" />

 <Style TargetType="TextBlock" x:Key="MainHeaderTextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
  <Setter Property="FontSize" Value="30" />
  <Setter Property="FontWeight" Value="Bold" />
  <Setter Property="HorizontalAlignment" Value="Stretch" />
  <Setter Property="TextAlignment" Value="Center" />
  <Setter Property="VerticalAlignment" Value="Center" />
  <Setter Property="Panel.ZIndex" Value="-99" />
 </Style>

 <Style TargetType="RadioButton" x:Key="StyleSwitchRadioButton" BasedOn="{StaticResource {x:Type RadioButton}}">
  <Setter Property="HorizontalContentAlignment" Value="Center" />
  <Setter Property="Margin" Value="10" />
  <Setter Property="VerticalAlignment" Value="Center" />
  <Setter Property="VerticalContentAlignment" Value="Center" />
 </Style>

 <Style TargetType="Grid" x:Key="ContainerGrid">
  <Setter Property="Margin" Value="10" />
 </Style>

 <Style TargetType="ListBox" x:Key="NavigationListBox">
  <Setter Property="Margin" Value="0,10,0,0" />
  <Setter Property="BorderThickness" Value="0.3" />
 </Style>

 <Style TargetType="Border" x:Key="ContentBorder">
  <Setter Property="BorderThickness" Value="0.1" />
  <Setter Property="Margin" Value="10,10,0,0" />
 </Style>

 <DataTemplate x:Key="MainNavigation" DataType="{x:Type nav:NavigationEntry}">
  <Label Content="{Binding NavigationDescription}" />
 </DataTemplate>

 <DataTemplate x:Key="MainHeader" DataType="{x:Type vm:ViewModelContainer}">
  <materialDesign:ColorZone Mode="PrimaryMid">
   <Grid>
    <!-- ReSharper disable once Xaml.StaticResourceNotResolved -->
    <ToggleButton
     IsChecked="{Binding IsMainNavigationPaneOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
     HorizontalAlignment="Left"
     Style="{StaticResource MaterialDesignHamburgerToggleButton}" />

    <TextBlock
     Style="{StaticResource MainHeaderTextBlock}">
     <TextBlock.Text>
      <PriorityBinding FallbackValue=""> <!--PriorityBinding is a best effort, as not all IViewModels have a heading-->
       <!-- ReSharper disable once Xaml.BindingWithContextNotResolved -->
       <Binding Path="CurrentContent.HeadingDescription" />
      </PriorityBinding>
     </TextBlock.Text>
    </TextBlock>

    <materialDesign:PopupBox
     HorizontalAlignment="Right"
     PlacementMode="BottomAndAlignRightEdges"
     StaysOpen="True">
     <StackPanel Orientation="Vertical">
      <RadioButton
       Content="Light"
       IsChecked="{Binding SelectedAppearanceTheme, Converter={StaticResource LightToBoolConverter}, Mode=TwoWay}"
       Style="{StaticResource StyleSwitchRadioButton}" />

      <RadioButton
       Content="Dark"
       IsChecked="{Binding SelectedAppearanceTheme, Converter={StaticResource DarkToBoolConverter}, Mode=TwoWay}"
       Style="{StaticResource StyleSwitchRadioButton}" />

      <Separator />

      <Button
       Command="{Binding CloseApp, Mode=OneWay}"
       CommandParameter="{Binding ElementName=ViewContainerWindow, Mode=OneWay}"
       Content="Close" />
     </StackPanel>
    </materialDesign:PopupBox>
   </Grid>
  </materialDesign:ColorZone>
 </DataTemplate>

 <Style TargetType="ListBoxItem" x:Key="MainNavigationContainerStyle"
        BasedOn="{StaticResource {x:Type ListBoxItem}}">
  <Setter Property="viewExtensions:EventCommandBinding.EventName" Value="PreviewMouseLeftButtonDown" />
  <Setter Property="viewExtensions:EventCommandBinding.Command" Value="{Binding NavigationCommand, Mode=OneWay}" />
 </Style>
</ResourceDictionary>